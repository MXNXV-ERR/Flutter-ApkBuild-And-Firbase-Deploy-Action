name: Deploy Flutter App directly to Firebase and Build Apk
description: 'To automate the deployment of your Flutter app on Firebase and build APKs, create a GitHub Action workflow. The workflow will trigger on each push event, ensuring continuous integration. It will use Flutter`s build tools to generate APKs and then deploy the app to Firebase Hosting using the Firebase CLI. Finally, the workflow will push the APKs to GitHub Releases, enabling easy distribution and version management. This streamlined process will save time and effort, making it convenient to deliver updates and improvements to your Flutter app.'
author: 'MXNXV-ERR'

inputs:
  githubToken:
    description: 'For pushng artifacts to releases,Ensure read write access to workflow'
    required: false
    default: '${{secrets.GITHUB_TOKEN}}'
  firebaseServiceAcc:
    description: 'For publishing onto Firebase,for that specific app'
    required: true
    default: ""

runs:
  using: 'composite'
  steps: 
    # build_and_deploy:
    #   name: "Build & Release"
    #   runs-on: ubuntu-latest
    #   steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - run: >-
        sudo snap install flutter --classic && flutter channel beta && flutter pub get && flutter build apk -debug --split-per-abi && flutter
        config --enable-web && flutter build web --web-renderer html --release
      shell: bash
    - name: Push to release
      uses: ncipollo/release-action@v1.10.0
      with:
        artifacts: "build/app/outputs/apk/release/*.apk"
        token: ${{ inputs.githubToken}}
        tag: v1.0.${{github.run_number}}
    - uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ inputs.githubToken }}'
        firebaseServiceAccount: '${{ inputs.firebaseServiceAcc }}'
        channelId: live
        projectId: '${{projectId}}'

